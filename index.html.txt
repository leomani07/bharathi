<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
        }
        .task-item {
            transition: all 0.3s ease;
        }
        .task-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }
        .completed {
            opacity: 0.6;
            text-decoration: line-through;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-purple-50 to-blue-50 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-2xl">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">‚ú® Task Manager</h1>
            <p class="text-gray-600">Stay organized and get things done</p>
        </div>

        <!-- Add Task Form -->
        <div class="bg-white rounded-2xl shadow-lg p-6 mb-8">
            <div class="flex gap-3">
                <input 
                    type="text" 
                    id="taskInput" 
                    placeholder="What needs to be done?"
                    class="flex-1 px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent text-gray-700"
                    onkeypress="handleKeyPress(event)"
                >
                <button 
                    onclick="addTask()"
                    class="bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 transform hover:scale-105 shadow-lg"
                >
                    Add Task
                </button>
            </div>
        </div>

        <!-- Task Stats -->
        <div class="grid grid-cols-3 gap-4 mb-6">
            <div class="bg-white rounded-xl p-4 text-center shadow-md">
                <div class="text-2xl font-bold text-purple-600" id="totalTasks">0</div>
                <div class="text-sm text-gray-600">Total</div>
            </div>
            <div class="bg-white rounded-xl p-4 text-center shadow-md">
                <div class="text-2xl font-bold text-green-600" id="completedTasks">0</div>
                <div class="text-sm text-gray-600">Completed</div>
            </div>
            <div class="bg-white rounded-xl p-4 text-center shadow-md">
                <div class="text-2xl font-bold text-orange-600" id="pendingTasks">0</div>
                <div class="text-sm text-gray-600">Pending</div>
            </div>
        </div>

        <!-- Task List -->
        <div class="bg-white rounded-2xl shadow-lg p-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold text-gray-800">Your Tasks</h2>
                <button 
                    onclick="clearCompleted()"
                    class="text-red-500 hover:text-red-700 text-sm font-medium transition-colors"
                >
                    Clear Completed
                </button>
            </div>
            
            <div id="taskList" class="space-y-3">
                <div class="text-center py-8 text-gray-500">
                    <div class="text-4xl mb-2">üìù</div>
                    <p>No tasks yet. Add one above to get started!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        let tasks = [];
        let taskIdCounter = 1;

        function addTask() {
            const input = document.getElementById('taskInput');
            const taskText = input.value.trim();
            
            if (taskText === '') {
                alert('Please enter a task!');
                return;
            }

            const task = {
                id: taskIdCounter++,
                text: taskText,
                completed: false,
                createdAt: new Date()
            };

            tasks.push(task);
            input.value = '';
            renderTasks();
            updateStats();
        }

        function toggleTask(id) {
            const task = tasks.find(t => t.id === id);
            if (task) {
                task.completed = !task.completed;
                renderTasks();
                updateStats();
            }
        }

        function deleteTask(id) {
            tasks = tasks.filter(t => t.id !== id);
            renderTasks();
            updateStats();
        }

        function clearCompleted() {
            tasks = tasks.filter(t => !t.completed);
            renderTasks();
            updateStats();
        }

        function renderTasks() {
            const taskList = document.getElementById('taskList');
            
            if (tasks.length === 0) {
                taskList.innerHTML = `
                    <div class="text-center py-8 text-gray-500">
                        <div class="text-4xl mb-2">üìù</div>
                        <p>No tasks yet. Add one above to get started!</p>
                    </div>
                `;
                return;
            }

            taskList.innerHTML = tasks.map(task => `
                <div class="task-item bg-gray-50 rounded-xl p-4 flex items-center gap-3 fade-in ${task.completed ? 'completed' : ''}">
                    <input 
                        type="checkbox" 
                        ${task.completed ? 'checked' : ''} 
                        onchange="toggleTask(${task.id})"
                        class="w-5 h-5 text-purple-600 rounded focus:ring-purple-500"
                    >
                    <span class="flex-1 text-gray-700 ${task.completed ? 'line-through' : ''}">${task.text}</span>
                    <button 
                        onclick="deleteTask(${task.id})"
                        class="text-red-500 hover:text-red-700 p-2 rounded-lg hover:bg-red-50 transition-colors"
                        title="Delete task"
                    >
                        üóë
                    </button>
                </div>
            `).join('');
        }

        function updateStats() {
            const total = tasks.length;
            const completed = tasks.filter(t => t.completed).length;
            const pending = total - completed;

            document.getElementById('totalTasks').textContent = total;
            document.getElementById('completedTasks').textContent = completed;
            document.getElementById('pendingTasks').textContent = pending;
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                addTask();
            }
        }

        // Initialize
        updateStats();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'965ba457d6e11b6e',t:'MTc1MzYxNDEyMC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>